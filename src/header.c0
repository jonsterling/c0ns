#use <conio>
#use "bit_utils.c0"

struct header {
    int id;
    int qr;
    int opcode;
    int aa;
    int tc;
    int rd;
    int ra;
    int z; // reserved
    int rcode; // response code
    int qdcount;
    int ancount;
    int nscount;
    int arcount;
};

// response codes
int rcode_no_error() {
    return 0;
}

int rcode_format_error() {
    return 1;
}

int rcode_server_failure() {
    return 2;
}

int rcode_name_error() {
    return 3;
}

int rcode_not_implemented() {
    return 4;
}

int rcode_refused() {
    return 5;
}

bool rcode_is_reserved(int rc) {
    return rc >= 6 && rc <= 15;
}


int parse_header(int offset, int[] data, struct header* dest) {
    int line12 = data[offset];
    offset += 1;

    int line34 = data[offset];
    offset += 1;

    int line56 = data[offset];
    offset += 1;

    int line1 = extract_bits(0, 16, line12);
    int line2 = extract_bits(16, 16, line12);
    int line3 = extract_bits(0, 16, line34);
    int line4 = extract_bits(16, 16, line34);
    int line5 = extract_bits(0, 16, line56);
    int line6 = extract_bits(16, 16, line56);

    dest->id = line1;
    dest->qr = extract_bits(0, 1, line2);
    dest->opcode = extract_bits(1, 4, line2);
    dest->aa = extract_bits(5, 1, line2);
    dest->tc = extract_bits(6, 1, line2);
    dest->rd = extract_bits(7, 1, line2);
    dest->ra = extract_bits(8, 1, line2);
    dest->z = extract_bits(9, 3, line2);
    dest->rcode = extract_bits(12, 4, line2);

    dest->qdcount = line3;
    dest->ancount = line4;
    dest->nscount = line5;
    dest->arcount = line6;

    return offset;
}

int main(){
    return 0;
}