#use "header.c0"
#use "resource_record.c1"
#use "bit_utils.c0"
#use "question.c0"

// TODO: would be nicer to have arrays of structs rather than arrays of pointers to structs, wasn't
// sure how to assign to it
struct message {
    struct header* header;
    struct question*[] question;
    struct resource_record*[] answer;
    struct resource_record*[] authority;
    struct resource_record*[] additional;
};


int parse_message(int cursor, int[] data, struct message* dest) {
    struct header* header = alloc(struct header);

    cursor = parse_header(cursor, data, header);

    int qdcount = header->qdcount;
    struct question*[] questions = alloc_array(struct question*, qdcount);

    for (int i = 0; i < qdcount; i++) {
        struct question* q = alloc(struct question);
        cursor = parse_question(cursor, data, q);
        questions[i] = q;
    }

    int ancount = header->ancount;
    struct resource_record*[] answers = alloc_array(struct resource_record*, ancount);

    for (int i = 0; i < ancount; i++) {
        struct resource_record* rr = alloc(struct resource_record);
        cursor = parse_resource_record(cursor, data, rr);
        answers[i] = rr;
    }

    int nscount = header->nscount;
    struct resource_record*[] auths = alloc_array(struct resource_record*, nscount);

    for (int i = 0; i < nscount; i++) {
        struct resource_record* rr = alloc(struct resource_record);
        cursor = parse_resource_record(cursor, data, rr);
        auths[i] = rr;
    }


    int arcount = header->arcount;
    struct resource_record*[] additionals = alloc_array(struct resource_record*, arcount);

    for (int i = 0; i < arcount; i++) {
        struct resource_record* rr = alloc(struct resource_record);
        cursor = parse_resource_record(cursor, data, rr);
        additionals[i] = rr;
    }

    dest->header = header;
    dest->question = questions;
    dest->answer = answers;
    dest->authority = auths;
    dest->additional = additionals;

    return cursor;
}

int main() {
    return 0;
}