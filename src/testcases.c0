#use <conio>

#use "header.c0"
#use "resource_record.c1"
#use "bit_utils.c0"
#use "question.c0"
#use "message.c1"

// The query with no entries in it.
struct message* test_case0(){

    struct message* test = alloc(struct message);
    struct header* header = alloc(struct header);
    test->header=header;
    /*header part*/
    test->header->id=0;
    //This message is a query.
    test->header->qr=0;
    //standard query
    test->header->opcode=0;
    //just valid in answers
    test->header->aa=0;
    //not truncated
    test->header->tc=0;

    //no recursion
    test->header->rd=0;
    test->header->ra=0;
    test->header->z=0;
    //just for responses
    test->header->rcode=0;
    test->header->qdcount=0;
    test->header->ancount=0;
    test->header->nscount=0;
    test->header->arcount=0;

    /*question part*/
    struct question*[] questions = alloc_array(struct question*, 0);
    test->question= questions;
    /*answer part*/
    struct resource_record*[] answers = alloc_array(struct resource_record*, 0);
    test->answer= answers;
    /*authority part*/
    struct resource_record*[] authorities = alloc_array(struct resource_record*, 0);
    test->authority= authorities;
    /*additional part*/
    struct resource_record*[] additionals = alloc_array(struct resource_record*, 0);
    test->additional= additionals;
    return test;
}

struct message* test_case1(){

    struct message* test = alloc(struct message);
    struct header* header = alloc(struct header);
    test->header=header;
    /*header part*/
    test->header->id=1;
    //This message is a query.
    test->header->qr=0;
    //standard query
    test->header->opcode=0;
    //just valid in answers
    test->header->aa=0;
    //not truncated
    test->header->tc=0;
    //no recursion
    test->header->rd=0;
    test->header->ra=0;
    test->header->z=0;
    //just for responses
    test->header->rcode=0;
    test->header->qdcount=1;
    test->header->ancount=0;
    test->header->nscount=0;
    test->header->arcount=0;

/*question part*/
    struct question*[] questions = alloc_array(struct question*, 1);
    struct question* q = alloc(struct question);
    domain_name name = domain_cons("aa", 2, domain_nil());
    q->qname=name;
    q->qtype=14;
    q->qclass=1;
    questions[0]=q;
    test->question= questions;

/*answer part*/
    struct resource_record*[] answers = alloc_array(struct resource_record*, 0);
    test->answer= answers;
    /*authority part*/
    struct resource_record*[] authorities = alloc_array(struct resource_record*, 0);
    test->authority= authorities;
    /*additional part*/
    struct resource_record*[] additionals = alloc_array(struct resource_record*, 0);
    test->additional= additionals;
    return test;
}
